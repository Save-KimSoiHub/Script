-- ‚öôÔ∏è C·∫•u h√¨nh
local Replicator = game:GetService("ReplicatedStorage"):WaitForChild("Replicator")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- üß† H√†m t·∫°o MouseRay (gi·∫£ l·∫≠p raycast)
local function getMouseRay(targetPos)
    local origin = Character.HumanoidRootPart.Position
    local direction = (targetPos - origin).Unit * 100
    return {
        Normal = direction.Unit,
        Direction = direction,
        Origin = origin,
        Instance = nil,
        Distance = 100,
        Material = Enum.Material.Plastic,
        Position = targetPos
    }
end

-- üìú Danh s√°ch k·ªπ nƒÉng Magma
local magmaSkills = {
    {
        name = "MajorEruption",
        needMouse = true,
        targetPos = Vector3.new(400, 740, -700) -- Ch·ªânh theo v·ªã tr√≠ ƒë·ªãch ho·∫∑c tr∆∞·ªõc m·∫∑t
    },
    {
        name = "MeteorVolcano",
        needMouse = true,
        targetPos = Vector3.new(400, 740, -700)
    },
    {
        name = "Plume",
        needMouse = false
    },
    {
        name = "EruptiveSurge",
        needMouse = false
    },
    {
        name = "HellHound",
        needMouse = true,
        targetPos = Vector3.new(800, 750, 1350)
    }
}

-- üîÅ Auto d√πng k·ªπ nƒÉng
task.spawn(function()
    while task.wait(3) do -- M·ªói 3 gi√¢y th·ª≠ d√πng 1 l·∫ßn, ch·ªânh t√πy cooldown
        for _, skill in ipairs(magmaSkills) do
            local args
            if skill.needMouse then
                args = {
                    "Magma",
                    skill.name,
                    {
                        MouseRay = getMouseRay(skill.targetPos)
                    }
                }
            else
                args = {
                    "Magma",
                    skill.name,
                    {}
                }
            end

            pcall(function()
                Replicator:InvokeServer(unpack(args))
            end)
            task.wait(1) -- Delay gi·ªØa c√°c chi√™u, tr√°nh overload
        end
    end
end)
