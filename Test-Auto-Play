--Auto Farm 
shared.autoFarm = shared.autoFarm or false
shared.forceUnlock = shared.forceUnlock or false
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local _isInGame = false
local currentFruit = nil
local currentHumanoid = nil
local characterReady = false
local lockConnection = nil
local lockedPosition = nil
isTeleported = false
local connection = nil

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Tìm nút Ranked
local function findRankedButton()
    for _, guiObj in ipairs(player:WaitForChild("PlayerGui"):GetChildren()) do
        if guiObj:IsA("ScreenGui") then
            for _, obj in ipairs(guiObj:GetDescendants()) do
                if obj:IsA("GuiButton") and obj.Visible and obj.Name == "Ranked" then
                    return obj
                end
            end
        end
    end
    return nil
end

-- Tìm nút Play
local function findPlayButton()
    for _, guiObj in ipairs(player:WaitForChild("PlayerGui"):GetChildren()) do
        if guiObj:IsA("ScreenGui") then
            local btn = guiObj:FindFirstChild("Play", true)
            if btn and btn:IsA("GuiButton") and btn.Visible then
                return btn
            end
        end
    end
    return nil
end

-- Kiểm tra nút đứng yên tuyệt đối trong vài frame
local function waitUntilStable(button, frameCount, timeout)
    local lastPos = button.AbsolutePosition
    local stableFrames = 0
    local startTime = tick()

    while tick() - startTime < timeout do
        if not button:IsDescendantOf(game) or not button.Visible then
            stableFrames = 0
            lastPos = button.AbsolutePosition
            task.wait()
            continue
        end

        local nowPos = button.AbsolutePosition
        if (nowPos - lastPos).magnitude == 0 then
            stableFrames += 1
            if stableFrames >= frameCount then
                return true
            end
        else
            stableFrames = 0
        end

        lastPos = nowPos
        task.wait() -- Mỗi frame
    end

    return false
end

-- Nhấn nút Play
local function pressPlay(playBtn)
    if playBtn and playBtn:IsA("GuiButton") and playBtn.Visible then
        GuiService.SelectedObject = playBtn
        task.wait(0.05)
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
        task.wait(0.05)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        print("[AutoPlay] Đã nhấn nút Play.")
        return true
    end
    return false
end

local skills = {
    Barrier = {"Barrier", "Bubble", "Crash", "Spikes"},
    Chop = {"Cannon", "Grab", "Car", "Festival"},
    Sand = {"DesertSlicer", "Spada", "Swamp", "SablesPesado"},
    Smoke = {"WhiteBlow", "WhiteOut", "Typhoon", "Firework"},
    Rubber = {"Pistol", "Bazooka", "Gatling", "Rocket", "Gear2"},
    Falcon = {"WingSlicer", "FlyingTalon", "WingCyclone", "FalconPunch"},
    Gas = {"BlueSword", "Suffocation", "CombustiveGas", "RelaxingGas"},
    Bomb = {"GrenadeBlaster", "Leap", "KickBomb", "HowitzerImpact"},
    Ice = {"Partisan", "Geyser", "Pheasant", "IceAge", "IceDragon"},
    Darkness = {"BlackHole", "Liberation", "BlackWorld", "Kurouzu", "DarkHaul", "DarkEnd"},
    Ash = {"ThousandCrows", "Obelisk", "CrowCascade", "CrowCoffin"},
    Light = {"LightKick", "MirrorKick", "BlindingCombo", "Guzan", "JewelsOfLight", "Flight"},
    Flame = {"FireFist", "FireGun", "Pillar", "Beam", "Enkai", "Flight"},
    Magma = {"MajorEruption", "MeteorVolcano", "Plume", "EruptiveSurge", "HellHound"},
    Paw = {"PressureCannon", "SonicStomp", "SumoThrustBarrage", "Torture", "UrsusShock"},
    String = {"Fullbright", "OverheatWhip", "StringKnight", "SixteenBullets", "Skywalk"},
    Love = {"CupidsArrows", "BouquetOfPain", "Heartthrob", "Heartstrings", "BlossomWind"},
    Snow = {"SnowAngel", "WinterStorm", "FrostDome", "SnowballCatastrophe", "SnowDrift"},
    Quake = {"Fist", "Eruption", "Slam", "IslandShake", "SeaQuake"},
    Gravity = {"Push", "Launch", "Avalanche", "Shoot", "PlanetaryDevastation", "GreatMeteor"},
    Phoenix = {"Fujiazami", "TalonSlam", "PhoenixInferno", "Bluebird", "Transform", "HawkRush"},
    Dragon = {"DragonBreath", "DragonClaw", "Screech", "DracoMeteor", "CrimsonBomb", "Transformation", "Tatsumaki"},
    TSRubber = {"JetPistol", "JetGatling", "RedHawk", "GrizzlyMagnum", "Gear4", "KongGun", "Culverin", "KongGatling", "KingKongGun", "ElasticPropulsion"},
    Magnet = {"Repel", "MetalArms", "Cyclone", "PunkPrison", "PunkCannon"},
    IceV2 = {"PiercingGlacier", "BlizzardBlade", "IceHail", "AbsoluteZero", "IceSkate"},
    MagmaV2 = {"HoundBlaze", "MagmaRain", "MagmaFloor", "Meigo", "CrimsonHowl"},
    LightV2 = {"PiercingShine", "PhotonStorm", "XFlash", "HeavenlyDescent", "SolarGrenade", "MirrorFlight"},
    FlameV2 = {"ScorchingFist", "TwistingClaw", "BlazingMeteor", "CrimsonBody", "Supernova"},
    Venom = {"ChloroFrenzy", "VenomRoad", "ToxicHydra", "PoisonStorm", "HydraCyclone", "Transform", "PoisonGeyser", "ToxicGeyser"},
    Dough = {"GrilledDough", "DoughMuddle", "LotusDoughCombo", "Chestnut", "Anemone", "Buzzcut"},
    Leopard = {"AfterimageCombo", "SpiralKick", "ClawBarrage", "PredatorsProwl", "Transform", "Rokuogan", "RisingClawCombo"},
    DoughV2 = {"GrilledLance", "ElasticLasso", "Oblivion", "PowerDough", "BlazingStorm", "ScorchingBuzzcut"},
    Ope = {"Room", "Takt", "Wreckage", "HurricaneShock", "GammaKnife", "Mes", "Shambles"},
    LeopardV2 = {"FingerPistolBarrage", "SonicKick", "InfinityDrive", "UnrelentingAssault", "Transform", "HeavensDemise"},
    Lightning = {"VoltageUp", "LightningPalm", "CrashingThunder", "ProjectedBurst", "CrushingJudgment", "Raigo"},
    Nika = {"RocGun", "NeoRedHawk", "RocGatling", "RedRoc", "DrumsOfLiberation", "Gear5", "SpinningTop", "DawnRocket", "MolePistolCombo", "RisingBolt", "GigantStamp", "BajrangGun"},
    DragonV2 = {"InfernoBreath", "ThunderBagua", "DragonTwister", "BeastsBellow", "Transform", "BoloFrenzy", "FlamingTorch", "Demolition", "Transformation"},
    Soul = {"EnthralGrasp", "ScorchingSickle", "ZeusMeadow", "CrimsonPillar", "Transform", "MaserCannon"},
    DarkXQuake = {"AntiQuake", "BlackHolePath", "BlackTurret", "NeoKurouzuCombo", "AntiBody", "QuadraSeaQuake"},
    Okuchi = {"PrimalRage", "ArcticBreath", "DevastatingDrop", "HallowedCuts", "GlacialCoat", "DivineSerpent", "Transform"},
}

local function isSkillReady(skillName)
    local cdFolder = player:FindFirstChild("Cooldowns")
    if not cdFolder then return true end
    local nested = cdFolder:FindFirstChild("Cooldowns")
    if not nested then return true end
    local skillCD = nested:FindFirstChild(skillName)
    if not skillCD then return true end
    return skillCD.Value <= 0
end

local function updateCurrentFruit()
    local mainData = player:FindFirstChild("MAIN_DATA")
    if not mainData then return end
    local currentSlot = mainData:FindFirstChild("Slot")
    if not currentSlot then return end
    local slotValue = mainData.Slots:FindFirstChild(tostring(currentSlot.Value))
    currentFruit = slotValue and slotValue.Value or nil
end

local function watchSlotChanges()
    local mainData = player:WaitForChild("MAIN_DATA", 10)
    if not mainData then return end
    local slot = mainData:WaitForChild("Slot", 5)
    if not slot then return end
    slot:GetPropertyChangedSignal("Value"):Connect(updateCurrentFruit)
    updateCurrentFruit()
end

-- Hàm khóa vị trí nhân vật
local function lockPosition()
    if connection then connection:Disconnect() end

    local character = player.Character or player.CharacterAdded:Wait()
    local root = character:WaitForChild("HumanoidRootPart")

    lockedPosition = root.Position

    connection = RunService.Heartbeat:Connect(function()
        if not shared.autoFarm or shared.forceUnlock then
            if connection then connection:Disconnect() end
            connection = nil
            return
        end

        root.Velocity = Vector3.zero
        root.AssemblyLinearVelocity = Vector3.zero
        root.CFrame = CFrame.new(lockedPosition)
    end)
end

local function unlockPosition()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

local function fastTeleport()
    if bienCaoCap then return end
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    if not hrp then return end

    local placeId = game.PlaceId
    if placeId == 12413901502 then
        hrp.CFrame = CFrame.new(-2229, 534, 1384)
    elseif placeId == 16190471004 then
        hrp.CFrame = CFrame.new(592, 2178, -1481)
    else
        hrp.CFrame = CFrame.new(-1390.10, 759.18, -185.84)
    end

    isTeleported = true
end

local function castSkill(fruit, skill)
    if not fruit or not skill then return end
    if not isSkillReady(skill) then return end
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local target = hrp.Position
    local dir = Vector3.new(0, -1, 0) * 10
    local ray = {
        Normal = Vector3.yAxis,
        Direction = dir,
        Origin = hrp.Position,
        Instance = workspace.Map:FindFirstChildWhichIsA("BasePart") or workspace.Terrain,
        Distance = (target - hrp.Position).Magnitude,
        Material = Enum.Material.Grass,
        Position = target
    }

    local success, err = pcall(function()
        ReplicatedStorage.Replicator:InvokeServer(fruit, skill, {
            Ground = {Position = target},
            MouseRay = ray
        })
        ReplicatedStorage.ReplicatorNoYield:FireServer("ClientData", "UpdateData", {
            RootCF = hrp.CFrame,
            MouseRay = ray
        })
    end)
    if not success then warn("[castSkill] Lỗi:", err) end
end

local skillLoopRunning = false
local function startSkillLoop()
    if skillLoopRunning then return end
    skillLoopRunning = true
    task.spawn(function()
        while true do
            if not shared.autoFarm then
                unlockPosition()
                isTeleported = false
                task.wait(0.5)
                continue
            end

            -- Nếu autoFarm bật và forceUnlock thì chỉ unlock vị trí (vẫn spam skill nếu đủ điều kiện)
            if shared.forceUnlock then
                unlockPosition()
            end

            if _isInGame and characterReady and currentFruit and skills[currentFruit] and (bienCaoCap or isTeleported) then
                for _, skill in ipairs(skills[currentFruit]) do
                    -- Kiểm tra lại trong vòng for để đảm bảo vẫn đúng điều kiện
                    if not (shared.autoFarm and _isInGame and characterReady and (bienCaoCap or isTeleported)) then break end
                    castSkill(currentFruit, skill)
                    task.wait(0.15)
                end
            else
                task.wait(0.5)
            end
        end
    end)
end

local function setupCharacter(character)
    characterReady = false
    currentHumanoid = character:WaitForChild("Humanoid", 5)
    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    if not hrp or not currentHumanoid then return end

    isTeleported = false

    task.spawn(function()
        local maxWait = 5
        local elapsed = 0
        while elapsed < maxWait do
            updateCurrentFruit()
            if currentFruit and hrp:IsDescendantOf(game) then
                characterReady = true
                break
            end
            elapsed += 0.2
            task.wait(0.2)
        end
    end)
end

player.CharacterAdded:Connect(function(char)
    if not shared.autoFarm then return end

    _isInGame = true
    characterReady = false
    isTeleported = false
    setupCharacter(char)

    task.delay(4, function()
        if shared.autoFarm then
            fastTeleport()
            lockPosition()
        end
    end)
end)
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    if shared.autoFarm then
        _isInGame = true
        setupCharacter(player.Character)
        task.delay(4, function()
            if shared.autoFarm then
                fastTeleport()
                lockPosition()
            end
        end)
    end
end

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local player = Players.LocalPlayer

task.spawn(function()
    while true do
        if not shared.autoFarm then
            task.wait(1)
            continue
        end

        if not player.Character then
            local ranked = findRankedButton()
            local playBtn = findPlayButton()

            if ranked and playBtn then
                print("[AutoPlay] Đã thấy Ranked. Đợi ổn định 3 frame...")
                if waitUntilStable(ranked, 3, 5) then
                    print("[AutoPlay] Ranked đã ổn định. Nhấn Play...")
                    if pressPlay(playBtn) then
                        local confirmStart = tick()
                        while tick() - confirmStart < 10 do
                            if player.Character or not playBtn.Visible then
                                print("[AutoPlay] Vào game OK.")
                                break
                            end
                            task.wait(0.2)
                        end
                    end
                else
                    print("[AutoPlay] Không ổn định kịp.")
                end
            else
                print("[AutoPlay] Chưa tìm thấy nút cần.")
            end
        end

        task.wait(0.5)
    end
end)

watchSlotChanges()
startSkillLoop()
